apiVersion: v1
kind: Template
metadata:
  name: liferay-on-wildfly-source
parameters:
- name: APP_NAME
  required: true
  value: liferay
- name: LF_MEMORY_LIMIT
  value: 4096Mi
- name: LF_CPU_LIMIT
  value: "2"

- name: APPSERVER_TYPE
  value: wildfly
- name: APPSERVER_VERSION
  value: 13.0.0.Final
- name: APPSERVER_DOWNLOAD_URL
  value: http://download.jboss.org/wildfly/13.0.0.Final/wildfly-13.0.0.Final.zip
- name: LIFERAY_PREFIX
  value: liferay-ce-portal
- name: LIFERAY_FULL_VERSION
  value: 7.1.0-ga1-20180703012531655
- name: LIFERAY_BASE_URL
  value: https://sourceforge.net/projects/lportal/files/Liferay%20Portal/7.1.0%20GA1
- name: LIFERAY_HOME
  value: /home/jboss/liferay
- name: APPSERVER_HOME_PATH
  value: /home/jboss/wildfly
- name: LIFERAY_TURN_OFF_LOGGING
  value: "true"
- name: JDBC_DRIVER_DOWNLOAD_URL
  value: https://jdbc.postgresql.org/download/postgresql-42.2.4.jar
- name: JDBC_DRIVER_CLASSNAME
  value: org.postgresql.Driver
- name: JDBC_DRIVER_CONNECTION_URL
  value: jdbc:postgresql:ddd
- name: JDBC_DRIVER_USERNAME
  value: postgres
- name: JDBC_DRIVER_PASSWORD
  value: postgres
- name: JDBC_CREDENTIAL_STORE_PASSWORD
  value: cs_pass

- name: LIFERAY_SOURCE_REPO
  value: https://github.com/bsv798/liferay-jboss-bundler
- name: LIFERAY_SOURCE_REF
  value: ddd
- name: LIFERAY_SOURCE_CONTEXT_DIR
  value: /

objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: ${APP_NAME}:latest
      name: latest
      referencePolicy:
        type: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    resources:
      limits:
        memory: 2048Mi
        cpu: 500m
      requests:
        memory: 2048Mi
        cpu: 200m
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    source:
      contextDir: ${LIFERAY_SOURCE_CONTEXT_DIR}
      git:
        ref: ${LIFERAY_SOURCE_REF}
        uri: ${LIFERAY_SOURCE_REPO}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: APPSERVER_TYPE
          value: ${APPSERVER_TYPE}
        - name: APPSERVER_VERSION
          value: ${APPSERVER_VERSION}
        - name: APPSERVER_DOWNLOAD_URL
          value: ${APPSERVER_DOWNLOAD_URL}
        - name: LIFERAY_PREFIX
          value: ${LIFERAY_PREFIX}
        - name: LIFERAY_FULL_VERSION
          value: ${LIFERAY_FULL_VERSION}
        - name: LIFERAY_BASE_URL
          value: ${LIFERAY_BASE_URL}
        - name: LIFERAY_HOME
          value: ${LIFERAY_HOME}
        - name: APPSERVER_HOME_PATH
          value: ${APPSERVER_HOME_PATH}
        - name: LIFERAY_TURN_OFF_LOGGING
          value: ${LIFERAY_TURN_OFF_LOGGING}
        - name: JDBC_DRIVER_DOWNLOAD_URL
          value: ${JDBC_DRIVER_DOWNLOAD_URL}
        - name: JDBC_DRIVER_CLASSNAME
          value: ${JDBC_DRIVER_CLASSNAME}
        - name: JDBC_DRIVER_CONNECTION_URL
          value: ${JDBC_DRIVER_CONNECTION_URL}
        - name: JDBC_DRIVER_USERNAME
          value: ${JDBC_DRIVER_USERNAME}
        - name: JDBC_DRIVER_PASSWORD
          value: ${JDBC_DRIVER_PASSWORD}
        - name: JDBC_CREDENTIAL_STORE_PASSWORD
          value: ${JDBC_CREDENTIAL_STORE_PASSWORD}
        from:
          kind: ImageStreamTag
          name: openjdk18-openshift:latest
          namespace: openshift
      type: source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
      liferay: ""
    strategy:
      activeDeadlineSeconds: 21600
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
          liferay: ""
      spec:
        containers:
        - env:
          - name: APPSERVER_TYPE
            value: ${APPSERVER_TYPE}
          - name: APPSERVER_VERSION
            value: ${APPSERVER_VERSION}
          - name: APPSERVER_DOWNLOAD_URL
            value: ${APPSERVER_DOWNLOAD_URL}
          - name: LIFERAY_PREFIX
            value: ${LIFERAY_PREFIX}
          - name: LIFERAY_FULL_VERSION
            value: ${LIFERAY_FULL_VERSION}
          - name: LIFERAY_BASE_URL
            value: ${LIFERAY_BASE_URL}
          - name: LIFERAY_HOME
            value: ${LIFERAY_HOME}
          - name: APPSERVER_HOME_PATH
            value: ${APPSERVER_HOME_PATH}
          - name: LIFERAY_TURN_OFF_LOGGING
            value: ${LIFERAY_TURN_OFF_LOGGING}
          - name: JDBC_DRIVER_DOWNLOAD_URL
            value: ${JDBC_DRIVER_DOWNLOAD_URL}
          - name: JDBC_DRIVER_CLASSNAME
            value: ${JDBC_DRIVER_CLASSNAME}
          - name: JDBC_DRIVER_CONNECTION_URL
            value: ${JDBC_DRIVER_CONNECTION_URL}
          - name: JDBC_DRIVER_USERNAME
            value: ${JDBC_DRIVER_USERNAME}
          - name: JDBC_DRIVER_PASSWORD
            value: ${JDBC_DRIVER_PASSWORD}
          - name: JDBC_CREDENTIAL_STORE_PASSWORD
            value: ${JDBC_CREDENTIAL_STORE_PASSWORD}
          image: ' '
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: ${LF_CPU_LIMIT}
              memory: ${LF_MEMORY_LIMIT}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
      liferay: ""
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
